
services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./shortener/public:/var/www/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`symfony.local`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
    depends_on:
      - php
    networks:
      - test_local_env
    restart: always
    
  php:
    build:
      context: ./shortener
      dockerfile: Dockerfile

  postgres:
    container_name: postgres
    image: postgres:13
    hostname: postgres
    init: true
    ports:
    - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - psql_data:/var/lib/postgresql/data
      - psql_db:/var/db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgres.rule=Host(`psql.local`)"
    working_dir: /var/db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - test_local_env
    restart: always

  portainer:
    image: portainer/portainer-ce:2.20.1-alpine
    hostname: portainer
    ports:
      - 9000:9000
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.local`)"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
    networks:
      - test_local_env
    restart: always

  redis:
    container_name: redis
    image: "redis:7.4.0-alpine"
    hostname: redis
    ports:
    - 6378:6378
    volumes:
      - redis_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`redis.local`)"
    networks:
      - test_local_env
    restart: always
    
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10.24-management
    hostname: rabbitmq
    init: true
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rmq_data:/var/lib/rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.local`)"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - test_local_env
    restart: always

  traefik:
    image: traefik:v3.0
    hostname: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.local`)"
    volumes:
      - ./config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config/traefik/config.yml:/etc/traefik/config.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    security_opt:
      - no-new-privileges:true
    networks:
      - test_local_env
    restart: always
    
  symfony:
    build: ./shortener
    container_name: symfony
    volumes:
      - ./shortener:/var/www
      - ./.env:/var/www/app/.env
    expose:
      - "9000"
    networks:
      - test_local_env
    depends_on:
      - postgres
    restart: always

networks:
  test_local_env:
    name: test_local_env
    driver: bridge

volumes:
  portainer_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data/portainer/data"
  psql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data/psql/data"
  psql_db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data/psql/db"
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data/redis/data"
  rmq_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "./data/rmq/data"

